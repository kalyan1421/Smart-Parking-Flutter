// Firebase Storage Security Rules for Smart Parking App
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidImageFile() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    function isValidDocumentFile() {
      return request.resource.contentType in ['application/pdf', 'image/jpeg', 'image/png'] &&
             request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      // Users can upload their own profile images
      allow read, write: if isAuthenticated() && 
                           isOwner(userId) && 
                           isValidImageFile();
      
      // Allow reading profile images for other authenticated users
      allow read: if isAuthenticated();
    }
    
    // Vehicle images
    match /vehicles/{vehicleId}/images/{fileName} {
      // Users can upload images of their vehicles
      allow read, write: if isAuthenticated() && 
                           isValidImageFile();
      
      // Allow reading vehicle images for verification
      allow read: if isAuthenticated();
    }
    
    // Parking spot images
    match /parking_spots/{spotId}/images/{fileName} {
      // Parking operators can upload spot images
      allow read, write: if isAuthenticated() && 
                           isValidImageFile();
      
      // Anyone can read parking spot images
      allow read: if isAuthenticated();
    }
    
    // Document uploads (licenses, permits, etc.)
    match /documents/{userId}/{category}/{fileName} {
      // Users can upload their own documents
      allow read, write: if isAuthenticated() && 
                           isOwner(userId) && 
                           isValidDocumentFile();
    }
    
    // Booking receipts and documents
    match /bookings/{bookingId}/receipts/{fileName} {
      // Users can access receipts for their bookings
      allow read: if isAuthenticated();
      
      // System can write receipts
      allow write: if isAuthenticated() && 
                     isValidDocumentFile();
    }
    
    // App assets and public files
    match /public/{fileName} {
      // Anyone can read public files
      allow read: if true;
      
      // Only authenticated users can write public files
      allow write: if isAuthenticated();
    }
    
    // Temporary uploads
    match /temp/{userId}/{fileName} {
      // Users can upload temporary files
      allow read, write: if isAuthenticated() && 
                           isOwner(userId) && 
                           (isValidImageFile() || isValidDocumentFile());
    }
    
    // Analytics and reports (admin access through backend only)
    match /analytics/{document=**} {
      allow read, write: if false; // Only backend services
    }
    
    // Backup files (admin access only through backend)
    match /backups/{document=**} {
      allow read, write: if false; // Only backend services
    }
  }
}
